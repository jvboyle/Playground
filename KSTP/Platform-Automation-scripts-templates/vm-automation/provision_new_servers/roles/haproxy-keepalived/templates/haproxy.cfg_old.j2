global
  log /dev/log    local0
  log /dev/log    local1 notice
  chroot /var/lib/haproxy
  stats socket /run/haproxy/admin.sock mode 660 level admin
  stats timeout 30s
  user haproxy
  group haproxy
  daemon
  ca-base /etc/ssl/certs
  crt-base /etc/ssl/private
  ssl-default-bind-ciphers kEECDH+aRSA+AES:kRSA+AES:+AES256:RC4-SHA:!kEDH:!LOW:!EXP:!MD5:!aNULL:!eNULL

#global
#    daemon
#    maxconn 50000
#    stats socket /var/lib/haproxy/haproxy.sock mode 0600 level admin

defaults
  log global
  mode http
  option  httplog
  option  dontlognull
  timeout connect 5000
  timeout client  50000
  timeout server  50000
  errorfile 400 /etc/haproxy/errors/400.http
  errorfile 403 /etc/haproxy/errors/403.http
  errorfile 408 /etc/haproxy/errors/408.http
  errorfile 500 /etc/haproxy/errors/500.http
  errorfile 502 /etc/haproxy/errors/502.http
  errorfile 503 /etc/haproxy/errors/503.http
  errorfile 504 /etc/haproxy/errors/504.http

listen stats
   bind 0.0.0.0:9000
   mode http
   log             global
   maxconn 10
   clitimeout      100s
   srvtimeout      100s
   contimeout      100s
   timeout queue   100s
   stats enable
   stats hide-version
   stats refresh 30s
   stats realm Haproxy\ Statistics
   stats uri /haproxy?status
   stats auth user:pass


frontend vip1
    bind 192.168.122.172:8080
    mode http
    maxconn 30000
    default_backend servers1
    acl network_allowed src 100.20.30.30 100.20.30.400
    acl restricted_page path_beg /admin
    block if restricted_page !network_allowed

backend servers1
    mode http
    balance roundrobin
    option forwardfor
    http-request set-header X-Forwarded-Port %[dst_port]
    http-request add-header X-Forwarded-Proto https if { ssl_fc }
    option httpchk HEAD / HTTP/1.1\r\nHost:localhost
#    option forwardfor header X-Client
#    option forwardfor
    server {{ hostname1 }} 192.168.122.172:3128 check inter 2000 rise 2 fall 5
    server {{ hostname1 }} 192.168.122.173:3128 check inter 2000 rise 2 fall 5

##forward proxy
#backend direct_forward
#    option httpclose
#    option http_proxy

