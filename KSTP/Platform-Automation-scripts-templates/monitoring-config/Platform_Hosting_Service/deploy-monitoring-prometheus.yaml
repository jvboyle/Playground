apiVersion: extensions/v1beta1
kind: Deployment
metadata:
  annotations:
    deployment.kubernetes.io/revision: "3"
    kubectl.kubernetes.io/last-applied-configuration: |
      {"apiVersion":"extensions/v1beta1","kind":"Deployment","metadata":{"annotations":{},"labels":{"app":"monitoring-prometheus","component":"prometheus"},"name":"monitoring-prometheus","namespace":"kube-system"},"spec":{"replicas":1,"template":{"metadata":{"labels":{"app":"monitoring-prometheus","component":"prometheus"}},"spec":{"affinity":{"nodeAffinity":{"requiredDuringSchedulingIgnoredDuringExecution":{"nodeSelectorTerms":[{"matchExpressions":[{"key":"beta.kubernetes.io/arch","operator":"In","values":["amd64"]},{"key":"management","operator":"In","values":["true"]}]}]}}},"containers":[{"args":["--volume-dir=/etc/config","--volume-dir=/etc/alert-rules","--webhook-url=http://localhost:9090/-/reload"],"image":"ibmcom/configmap-reload:v0.1","imagePullPolicy":"IfNotPresent","name":"configmap-reload","volumeMounts":[{"mountPath":"/etc/config","name":"config-volume","readOnly":true},{"mountPath":"/etc/alert-rules","name":"alert-rules-volume","readOnly":true}]},{"args":["--config.file=/etc/config/prometheus.yml","--storage.tsdb.path=/var/lib/prometheus/data","--web.enable-lifecycle","--storage.local.memory-chunks=500000","--storage.local.retention=24h"],"image":"ibmcom/prometheus:v2.0.0","imagePullPolicy":"IfNotPresent","name":"prometheus","ports":[{"containerPort":9090,"name":"web"}],"resources":{},"securityContext":{"runAsUser":0},"volumeMounts":[{"mountPath":"/etc/config","name":"config-volume"},{"mountPath":"/var/lib/prometheus/data","name":"storage-volume"},{"mountPath":"/etc/alert-rules","name":"alert-rules-volume"},{"mountPath":"/opt/ibm/monitoring/certs","name":"monitoring-client-certs"}]},{"command":["/opt/ibm/router/entry/entrypoint.sh"],"image":"ibmcom/icp-router:2.2.0","imagePullPolicy":"IfNotPresent","name":"router","ports":[{"containerPort":8080,"name":"router"}],"volumeMounts":[{"mountPath":"/opt/ibm/router/conf","name":"router-config"},{"mountPath":"/opt/ibm/router/certs","name":"monitoring-certs"},{"mountPath":"/opt/ibm/router/ca-certs","name":"monitoring-ca-cert"},{"mountPath":"/opt/ibm/router/entry","name":"router-entry"}]}],"tolerations":[{"effect":"NoSchedule","key":"dedicated","operator":"Exists"}],"volumes":[{"configMap":{"name":"monitoring-prometheus"},"name":"config-volume"},{"name":"storage-volume","persistentVolumeClaim":{"claimName":"monitoring-prometheus-pvc"}},{"configMap":{"name":"alert-rules"},"name":"alert-rules-volume"},{"configMap":{"name":"prometheus-router-nginx-config"},"name":"router-config"},{"name":"monitoring-certs","secret":{"secretName":"monitoring-certs"}},{"name":"monitoring-ca-cert","secret":{"secretName":"monitoring-ca-cert"}},{"name":"monitoring-client-certs","secret":{"secretName":"monitoring-client-certs"}},{"configMap":{"defaultMode":484,"name":"monitoring-router-entry-config"},"name":"router-entry"}]}}}}
  creationTimestamp: 2018-03-21T05:20:09Z
  generation: 3
  labels:
    app: monitoring-prometheus
    component: prometheus
  name: monitoring-prometheus
  namespace: kube-system
  resourceVersion: "54352181"
  selfLink: /apis/extensions/v1beta1/namespaces/kube-system/deployments/monitoring-prometheus
  uid: 8604e333-2cc7-11e8-bc77-005056bbded7
spec:
  progressDeadlineSeconds: 600
  replicas: 1
  revisionHistoryLimit: 10
  selector:
    matchLabels:
      app: monitoring-prometheus
      component: prometheus
  strategy:
    rollingUpdate:
      maxSurge: 1
      maxUnavailable: 1
    type: RollingUpdate
  template:
    metadata:
      creationTimestamp: null
      labels:
        app: monitoring-prometheus
        component: prometheus
    spec:
      affinity:
        nodeAffinity:
          requiredDuringSchedulingIgnoredDuringExecution:
            nodeSelectorTerms:
            - matchExpressions:
              - key: beta.kubernetes.io/arch
                operator: In
                values:
                - amd64
              - key: management
                operator: In
                values:
                - "true"
      containers:
      - args:
        - --volume-dir=/etc/config
        - --volume-dir=/etc/alert-rules
        - --webhook-url=http://localhost:9090/-/reload
        image: ibmcom/configmap-reload:v0.1
        imagePullPolicy: IfNotPresent
        name: configmap-reload
        resources: {}
        terminationMessagePath: /dev/termination-log
        terminationMessagePolicy: File
        volumeMounts:
        - mountPath: /etc/config
          name: config-volume
          readOnly: true
        - mountPath: /etc/alert-rules
          name: alert-rules-volume
          readOnly: true
      - args:
        - --config.file=/etc/config/prometheus.yml
        - --storage.tsdb.path=/var/lib/prometheus/data
        - --web.enable-lifecycle
        image: ibmcom/prometheus:v2.0.0
        imagePullPolicy: IfNotPresent
        name: prometheus
        ports:
        - containerPort: 9090
          name: web
          protocol: TCP
        resources: {}
        securityContext:
          runAsUser: 0
        terminationMessagePath: /dev/termination-log
        terminationMessagePolicy: File
        volumeMounts:
        - mountPath: /etc/config
          name: config-volume
        - mountPath: /var/lib/prometheus/data
          name: storage-volume
        - mountPath: /etc/alert-rules
          name: alert-rules-volume
        - mountPath: /opt/ibm/monitoring/certs
          name: monitoring-client-certs
      - command:
        - /opt/ibm/router/entry/entrypoint.sh
        image: ibmcom/icp-router:2.2.0
        imagePullPolicy: IfNotPresent
        name: router
        ports:
        - containerPort: 8080
          name: router
          protocol: TCP
        resources: {}
        terminationMessagePath: /dev/termination-log
        terminationMessagePolicy: File
        volumeMounts:
        - mountPath: /opt/ibm/router/conf
          name: router-config
        - mountPath: /opt/ibm/router/certs
          name: monitoring-certs
        - mountPath: /opt/ibm/router/ca-certs
          name: monitoring-ca-cert
        - mountPath: /opt/ibm/router/entry
          name: router-entry
      dnsPolicy: ClusterFirst
      restartPolicy: Always
      schedulerName: default-scheduler
      securityContext: {}
      terminationGracePeriodSeconds: 30
      tolerations:
      - effect: NoSchedule
        key: dedicated
        operator: Exists
      volumes:
      - configMap:
          defaultMode: 420
          name: monitoring-prometheus
        name: config-volume
      - name: storage-volume
        persistentVolumeClaim:
          claimName: monitoring-prometheus-pvc
      - configMap:
          defaultMode: 420
          name: alert-rules
        name: alert-rules-volume
      - configMap:
          defaultMode: 420
          name: prometheus-router-nginx-config
        name: router-config
      - name: monitoring-certs
        secret:
          defaultMode: 420
          secretName: monitoring-certs
      - name: monitoring-ca-cert
        secret:
          defaultMode: 420
          secretName: monitoring-ca-cert
      - name: monitoring-client-certs
        secret:
          defaultMode: 420
          secretName: monitoring-client-certs
      - configMap:
          defaultMode: 484
          name: monitoring-router-entry-config
        name: router-entry
status:
  conditions:
  - lastTransitionTime: 2018-03-21T05:20:09Z
    lastUpdateTime: 2018-03-21T05:20:09Z
    message: Deployment has minimum availability.
    reason: MinimumReplicasAvailable
    status: "True"
    type: Available
  - lastTransitionTime: 2018-04-05T04:20:55Z
    lastUpdateTime: 2018-04-05T04:20:59Z
    message: ReplicaSet "monitoring-prometheus-75cd5c6cf9" has successfully progressed.
    reason: NewReplicaSetAvailable
    status: "True"
    type: Progressing
  observedGeneration: 3
  replicas: 1
  unavailableReplicas: 1
  updatedReplicas: 1
